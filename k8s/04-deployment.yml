---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: spring-petclinic
  labels:
    app: petclinic
spec:
  replicas: 1
  selector:
    matchLabels:
      app: petclinic
      tier: api-gateway
  template:
    metadata:
      labels:
        app: petclinic
        tier: api-gateway
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/actuator/prometheus"
        prometheus.io/port:  "8080"
    spec:
      containers:
        - name: app
          image: alexandreroman/spring-petclinic-k8s-api-gateway:latest
          imagePullPolicy: Always
          resources:
            requests:
              memory: 1Gi
            limits:
              memory: 1Gi
          envFrom:
            - configMapRef:
                name: app
            - secretRef:
                name: database
            - configMapRef:
                name: app-wavefront
                optional: true            
            - secretRef:
                name: app-wavefront
                optional: true
          ports:
            - name: http
              containerPort: 8080
          livenessProbe:
            httpGet:
              port: http
              path: /actuator/health/liveness
            initialDelaySeconds: 60
            timeoutSeconds: 4
          readinessProbe:
            httpGet:
              port: http
              path: /actuator/health/readiness
            initialDelaySeconds: 60
            timeoutSeconds: 4
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: customers
  namespace: spring-petclinic
  labels:
    app: petclinic
spec:
  replicas: 1
  selector:
    matchLabels:
      app: petclinic
      tier: customers
  template:
    metadata:
      labels:
        app: petclinic
        tier: customers
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/actuator/prometheus"
        prometheus.io/port:  "8080"
    spec:
      containers:
        - name: app
          image: alexandreroman/spring-petclinic-k8s-customers:latest
          imagePullPolicy: Always
          resources:
            requests:
              memory: 1Gi
            limits:
              memory: 1Gi
          envFrom:
            - configMapRef:
                name: app
            - secretRef:
                name: database
            - configMapRef:
                name: app-wavefront
                optional: true            
            - secretRef:
                name: app-wavefront
                optional: true
          env:
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: mysql-password
                  name: pdb-mysql
          ports:
            - name: http
              containerPort: 8080
          livenessProbe:
            httpGet:
              port: http
              path: /actuator/health/liveness
            initialDelaySeconds: 60
            timeoutSeconds: 4
          readinessProbe:
            httpGet:
              port: http
              path: /actuator/health/readiness
            initialDelaySeconds: 60
            timeoutSeconds: 4
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vets
  namespace: spring-petclinic
  labels:
    app: petclinic
spec:
  replicas: 1
  selector:
    matchLabels:
      app: petclinic
      tier: vets
  template:
    metadata:
      labels:
        app: petclinic
        tier: vets
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/actuator/prometheus"
        prometheus.io/port:  "8080"
    spec:
      containers:
        - name: app
          image: alexandreroman/spring-petclinic-k8s-vets:latest
          imagePullPolicy: Always
          resources:
            requests:
              memory: 1Gi
            limits:
              memory: 1Gi
          envFrom:
            - configMapRef:
                name: app
            - secretRef:
                name: database
            - configMapRef:
                name: app-wavefront
                optional: true            
            - secretRef:
                name: app-wavefront
                optional: true
          env:
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: mysql-password
                  name: pdb-mysql
          ports:
            - name: http
              containerPort: 8080
          livenessProbe:
            httpGet:
              port: http
              path: /actuator/health/liveness
            initialDelaySeconds: 60
            timeoutSeconds: 4
          readinessProbe:
            httpGet:
              port: http
              path: /actuator/health/readiness
            initialDelaySeconds: 60
            timeoutSeconds: 4
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: visits
  namespace: spring-petclinic
  labels:
    app: petclinic
spec:
  replicas: 1
  selector:
    matchLabels:
      app: petclinic
      tier: visits
  template:
    metadata:
      labels:
        app: petclinic
        tier: visits
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/actuator/prometheus"
        prometheus.io/port:  "8080"
    spec:
      containers:
        - name: app
          image: alexandreroman/spring-petclinic-k8s-visits:latest
          imagePullPolicy: Always
          resources:
            requests:
              memory: 1Gi
            limits:
              memory: 1Gi
          envFrom:
            - configMapRef:
                name: app
            - secretRef:
                name: database
            - configMapRef:
                name: app-wavefront
                optional: true            
            - secretRef:
                name: app-wavefront
                optional: true
          env:
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: mysql-password
                  name: pdb-mysql
          ports:
            - name: http
              containerPort: 8080
          livenessProbe:
            httpGet:
              port: http
              path: /actuator/health/liveness
            initialDelaySeconds: 60
            timeoutSeconds: 4
          readinessProbe:
            httpGet:
              port: http
              path: /actuator/health/readiness
            initialDelaySeconds: 60
            timeoutSeconds: 4
